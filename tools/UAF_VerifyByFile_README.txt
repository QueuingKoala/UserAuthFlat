UserAuthFlat tool: UAF_VerifyByFile(This document best viewed with word wrap enabled)PURPOSE AND USAGEUAF_VerifyByFile is a program to perform authentication of a user by passing 2 file paths as arguments:	1) The path to the UAF "auth" file	2) The path to a plaintext file with the username and password on lines 1 & 2Note that all paths are relative to the current working directory this program was called from, NOT the location of the program itself. You may of course use full paths as well.INTENDED USEThis tool is designed for use in systems that can authenticate users by calling an external program after creating the plaintext user/pass file itself. Such a system is OpenVPN, although there may be others.EXIT CODESOn successful authentication, exit code 0 is returned.On failure (for any reason) an exit code >=1 is returned. See the source for full details on the meaning of the various error codes.OPTIONAL LOGGING SUPPORTWhile the software calling this program may have its own log system, it may be beneficial to have this tool log the times of successful or failed auth attempts by users.If a file called UAF_VerifyByFile.ini exists in the same directory as this program is executed from, it will attempt to read the following ini keys from a [Logging] section, if present. If this ini file does not exist, or does not contain a logging section with any relevant keys, no logging will be done.Optionally, logging can be declared "Fatal" (see LogFatal key below) which will fail a user auth if the logfile cannot be opened or append to. The success/failure message may also be adjusted, accepting env-vars and attempted username string replacement (see Text* keys below.)LOGGING INI KEY DESCRIPTIONSEnabled = TrueEnabled = False	(Required argument for logging.) This declares if logging is to be enabled. The literal string True must be supplied to enable, otherwise the value is assumed to be False.LogFile = filename.log	(Required argument for logging.) This defines the log file to write to, taken as a path from the programâ€™s directoryLogFatal = TrueLogFatal = False	(Optional, and assumed to be False unless specified otherwise.) When enabled, the user will be denined login, even with matching credentials, if the log file cannot be opened or written to. As with the "Enabled" key, this value must be a literal "True" be effective.TextSuccess = StringTextFailure = String	(Optional, uses a hardcoded default message string when omitted.) Either the success or failure log message text may be replaced by a literal string specified here. The special substring ":user:" (no quotes) will be replaced by the username of the authentication attempt.